@page "/marca/crear"
@using Blazored.Toast.Services
@using PoryectoSistemaTransporte.Shared
@using PoryectoSistemaTransporte.Shared.Request
@using PoryectoSistemaTransporte.Shared.Response
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@attribute [Authorize(Roles = Constantes.RolAdministrador)]


@if (TipoVehiculos != null)
{
<PageNewEditMarca Request="Request" OnGrabar="Grabar"
                  TipoVehiculos="TipoVehiculos"></PageNewEditMarca>

}
else
{
    <p>Cargando...</p>
}


@code {
    public MarcaDTORequest Request { get; set; } = new();

    public ICollection<TipoVehiculoDTOResponse>? TipoVehiculos { get; set; }

    private async Task Grabar()
    {

        Request.UsuarioCreacion = "administrador";
        Request.UsuarioModificacion = "administrador";

        try
        {
           var response = await Http.PostAsJsonAsync("api/Marca", Request);

            response.EnsureSuccessStatusCode();

            var crearresponse = await response.Content.ReadFromJsonAsync<BaseResponseDTO>();

            if (crearresponse!.Exito ==false)
            {
                ToastService.ShowWarning(crearresponse.MensajeError!);
            }
            else
            {

                ToastService.ShowSuccess(crearresponse.MensajeError!);
                NavigationManager.NavigateTo("/marca/lista");
            }

          

        }
        catch(Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }



    }

    protected override async Task OnInitializedAsync()
    {
        
        TipoVehiculos = await Http.GetFromJsonAsync<ICollection<TipoVehiculoDTOResponse>>("api/TipoVehiculo");
    }
}
