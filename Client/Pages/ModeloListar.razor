@page "/modelo/lista"
@using PoryectoSistemaTransporte.Shared.Response
@inject HttpClient HttpClient
@attribute [Authorize]


<h1>Listado Modelo</h1>
<br />
<div class="row mb-5 mt-4 justify-content-start align-items-baseline">
    <div class="col-2">
        <label class="form-label" for="filtroDescripcion">Descripcion :</label>
    </div>
    <div class="col-4">
        <div class="input-group">
            <input type="text" class="form-control" @bind-value="filtroDescripcion" id="txtDescripcion" />
            <span class="input-group-text" style="cursor:pointer" @onclick="()=>filtroDescripcion = string.Empty"><i class="bi bi-file-x"></i></span>
        </div>
    </div>

    <div class="col-sm">
        <button type="button" class="btn btn-outline-success" @onclick="Cargar"><i class="bi bi-search"></i></button>
    </div>
</div>

@if (listaModeloResponse == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <table class="table table table-bordered border border-success border-3">
        <thead>
            <tr class="table-success">
                <th>Id</th>
                <th>Descripcion</th>
                <th>Marca</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var itemModelo in listaModeloResponse)
            {
                <tr>
                    <td>@itemModelo.Id</td>
                    <td>@itemModelo.Descripcion</td>
                    <td>@itemModelo.Marca</td>

                </tr>
            }
        </tbody>
    </table>
}


@code {

    public ICollection<ModeloDTOResponse>? listaModeloResponse { get; set; }

    private string? filtroDescripcion = string.Empty;

    private async Task Cargar()
    {

        listaModeloResponse = await HttpClient.GetFromJsonAsync<ICollection<ModeloDTOResponse>>($"api/Modelo/simpleSP?Descripcion={filtroDescripcion}");



    }
    protected override async Task OnInitializedAsync()
    {
        await Cargar();
    }
}